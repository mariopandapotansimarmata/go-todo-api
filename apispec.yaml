openapi: "3.0.3"
info:
  title: Todo List API
  version: "1.0"
  description: "API Spec for Simple Todo List "
servers:
  - url: http://localhost:8080/api/v1

components:
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT  # Optional, but recommended to specify JWT

  schemas:
    todos:
      type: "object"
      properties:
        id:
          type: number
        name:
          type: string
        timeCreate:
          type: string
          format: date-time
        timeFinish:
          type: string
          format: date-time
          nullable: true

paths:
  /login:
    post:
      tags:
        - Authentication API
      description: Login to get JWT
      summary: Login to get JWT
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                password:
                  type: string
      responses:
        200:
          description: Login Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
                  expires:
                    type: string
                            

  /todos:
    get:
      security:
        - BearerAuth: []  # Requires JWT Bearer authentication
      tags:
        - Todo List API
      description: List of Todos
      summary: List of Todos
      responses:
        200:
          description: Success get all Todos
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: number
                  status:
                    type: string
                  data:
                    type: array
                    items:
                      $ref: "#/components/schemas/todos"
    
    post:
      security:
        - BearerAuth: []  # Requires JWT Bearer authentication
      tags:
        - Todo List API
      description: Create Todo
      summary: Create Todo
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
      responses:
        200:
          description: Success create Todo
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: number
                  status:
                    type: string
                  data:
                    $ref: "#/components/schemas/todos"
  
  /todos/{todoId}:
    get:
      security:
        - BearerAuth: []  # Requires JWT Bearer authentication
      tags:
        - Todo List API
      description: Get Todo by ID
      summary: Get Todo by ID
      parameters:
        - name: todoId
          in: path
          schema: 
            type: string
          required: true
          description: Todo ID
      responses:
        200:
          description: Success get Todo
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: number
                  status:
                    type: string
                  data: 
                    $ref: "#/components/schemas/todos"

    put:
      security:
        - BearerAuth: []  # Requires JWT Bearer authentication
      description: Update Todo
      summary: Update Todo
      tags:
        - Todo List API
      parameters:
        - name: todoId
          in: path
          description: Todo ID
          schema: 
            type: string
          required: true
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
      responses:
        200:
          description: Success update Todo
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: number
                  status:
                    type: string
                  data:
                    type: array
                    items:
                      $ref: "#/components/schemas/todos"
    
    delete:
      security:
        - BearerAuth: []  # Requires JWT Bearer authentication
      tags:
        - Todo List API
      description: Delete Todo
      summary: Delete Todo 
      parameters:
        - name: todoId
          in: path
          schema: 
            type: string
          required: true
          description: Todo ID
      responses:
        200:
          description: Success delete Todo
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: number
                  status:
                    type: string

  /todos/{todoId}/finish:
    patch:
      security:
        - BearerAuth: []  # Requires JWT Bearer authentication
      tags:
        - Todo List API
      description: Set Finish Todo 
      summary: Set Finish Todo 
      parameters:
        - name: todoId
          in: path
          schema: 
            type: string
          required: true
          description: Todo ID
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                timeFinish:
                  type: string
                  format: date-time
      responses:
        200:
          description: Success set finish Todo
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: number
                  status:
                    type: string
                  data:
                    $ref: "#/components/schemas/todos"
